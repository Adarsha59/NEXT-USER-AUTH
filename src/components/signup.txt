"use client";
import React, { useState } from "react";
import { FaEnvelope, FaEye, FaEyeSlash } from "react-icons/fa";
import { useForm } from "react-hook-form";

const SignupForm = () => {
  const [showPassword, setShowPassword] = useState(false);

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();

  const onSubmit = (data) => {
    console.log(data);
  };

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-purple-400 via-pink-500 to-red-500 p-4">
      <div className="w-full max-w-md">
        <form
          className="bg-white bg-opacity-20 backdrop-filter backdrop-blur-lg rounded-3xl shadow-2xl p-8 transform hover:scale-105 transition-all duration-300 ease-in-out"
          onSubmit={handleSubmit(onSubmit)} // Form submission handling
        >
          <h2 className="text-3xl font-bold text-center text-white mb-8">
            Sign Up
          </h2>

          {/* Username Field */}
          <div className="mb-6 relative">
            <input
              type="text"
              id="username"
              {...register("username", { required: "Username is required" })}
              className="w-full px-4 py-3 rounded-lg bg-opacity-20 bg-white border border-gray-300 focus:border-purple-500 focus:ring-2 focus:ring-purple-200 text-white placeholder-gray-300 outline-none transition-all duration-300"
              placeholder="Username"
            />
            {errors.username && (
              <span className="text-red-500 text-sm">
                {errors.username.message}
              </span>
            )}
            <label
              htmlFor="username"
              className="absolute left-4 top-3 text-gray-300"
            >
              Username
            </label>
          </div>

          {/* Email Field */}
          <div className="mb-6 relative">
            <input
              type="email"
              id="email"
              {...register("email", {
                required: "Email is required",
                pattern: {
                  value: /^\S+@\S+$/i,
                  message: "Invalid email format",
                },
              })}
              className="w-full pl-10 pr-4 py-3 rounded-lg bg-opacity-20 bg-white border border-gray-300 focus:border-purple-500 focus:ring-2 focus:ring-purple-200 text-white placeholder-gray-300 outline-none transition-all duration-300"
              placeholder="Email"
            />
            {errors.email && (
              <span className="text-red-500 text-sm">
                {errors.email.message}
              </span>
            )}
            <label
              htmlFor="email"
              className="absolute left-10 top-3 text-gray-300"
            >
              Email
            </label>
            <FaEnvelope className="absolute left-3 top-4 text-gray-300" />
          </div>

          {/* Password Field */}
          <div className="mb-6 relative">
            <input
              type={showPassword ? "text" : "password"}
              id="password"
              {...register("password", {
                required: "Password is required",
                minLength: {
                  value: 6,
                  message: "Password must be at least 6 characters",
                },
              })}
              className="w-full px-4 py-3 rounded-lg bg-opacity-20 bg-white border border-gray-300 focus:border-purple-500 focus:ring-2 focus:ring-purple-200 text-white placeholder-gray-300 outline-none transition-all duration-300"
              placeholder="Password"
            />
            {errors.password && (
              <span className="text-red-500 text-sm">
                {errors.password.message}
              </span>
            )}
            <label
              htmlFor="password"
              className="absolute left-4 top-3 text-gray-300"
            >
              Password
            </label>
            <button
              type="button"
              onClick={togglePasswordVisibility}
              className="absolute right-3 top-3 text-gray-300 hover:text-white transition-all duration-300"
            >
              {showPassword ? <FaEyeSlash /> : <FaEye />}
            </button>
          </div>

          {/* Submit Button */}
          <button
            type="submit"
            className="w-full bg-gradient-to-r from-purple-500 to-pink-500 text-white font-bold py-3 px-4 rounded-lg hover:opacity-90 transition-all duration-300 transform hover:scale-105"
          >
            Sign Up
          </button>

          {/* Forgot Password */}
          <div className="text-center mt-4">
            <a
              href="#"
              className="text-sm text-purple-200 hover:text-white transition-all duration-300 hover:underline"
            >
              Forgot Password?
            </a>
          </div>
        </form>
      </div>
    </div>
  );
};

export default SignupForm;
